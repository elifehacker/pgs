Drop TYPE if exists pname cascade;

CREATE FUNCTION pname_in(cstring)
   RETURNS pname
   AS '_OBJWD_/pname'
   LANGUAGE C IMMUTABLE STRICT;

-- the output function 'pname_out' takes the internal representation and
-- converts it into the textual representation.

CREATE FUNCTION pname_out(pname)
   RETURNS cstring
   AS '_OBJWD_/pname'
   LANGUAGE C IMMUTABLE STRICT;

-- now, we can create the type. The internallength specifies the size of the
-- memory block required to hold the type (we need two 8-byte doubles).
CREATE TYPE pname (
   internallength = 16,
   input = pname_in,
   output = pname_out,
   alignment = double
);


-----------------------------
-- Using the new type:
--      user-defined types can be used like ordinary built-in types.
-----------------------------

-- eg. we can use it in a table

DROP TABLE if exists Students;
create table Students (
   name      pname not null
);

insert into Students(name) values
('Shepherd John Andrew'),
('Smith, Stephen');

create index on Students using hash (name);
select a.zid, a.name, b.zid
from   Students a join Students b on (a.name = b.name);

select family(name), given(name), show(name)
from   Students;

select name,count(*)
from   Students
group  by name;


-- clean up the example
DROP TABLE students;
DROP TYPE pname CASCADE;
